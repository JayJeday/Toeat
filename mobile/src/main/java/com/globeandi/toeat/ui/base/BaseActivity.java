package com.globeandi.toeat.ui.base;


import android.annotation.TargetApi;
import android.content.Context;
import android.content.pm.PackageManager;
import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.LayoutRes;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;

import com.globeandi.toeat.util.NetworkUtils;

import dagger.android.AndroidInjection;

/**
 * Created by jay on 3/21/2018.
 */

public abstract class BaseActivity<T extends ViewDataBinding, V extends BaseViewModel> extends AppCompatActivity
implements BaseFragment.Callback {

    private T mViewDataBinding;
    private  V mViewModel;

    /**
     *
     * @return layout resource id
     */
    public abstract
    @LayoutRes int getLayoutId();

    /**
     *
     * @return variable id of the layout binding
     */
    public abstract int getBindingVariable();

    /**
     *
     * @return view model instance
     */
    public abstract V  getViewModel();


    public boolean isNetworkConnected(){
        return NetworkUtils.isNetworkConnected(getApplicationContext());
    }

    @TargetApi(Build.VERSION_CODES.M)
    public boolean hasPermission(String permission){
        return Build.VERSION.SDK_INT < Build.VERSION_CODES.M ||
                checkSelfPermission(permission) == PackageManager.PERMISSION_GRANTED;
    }

    @TargetApi(Build.VERSION_CODES.M)
    public void requestPermissionsSafely(String[] permissions, int requestCode) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            requestPermissions(permissions, requestCode);
        }
    }

    /**
     *
     * @return the class binding generated by the view data binding
     */
    public T getViewDataBinding(){
        return mViewDataBinding;
    }


    private void performDependencyInjection(){
        AndroidInjection.inject(this);
    }

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        //make dependencies available to login activity
        performDependencyInjection();
        super.onCreate(savedInstanceState);
        //set the dataBinding instance of the layout
        performDataBinding();
    }

    private void performDataBinding() {
        // Inflate the content view (replacing `setContentView`)
        mViewDataBinding = DataBindingUtil.setContentView(this,getLayoutId());
        //instantiate view model
        this.mViewModel = mViewModel == null ? getViewModel(): mViewModel;
        //set view model variable manually and updated
        mViewDataBinding.setVariable(getBindingVariable(),mViewModel);
        mViewDataBinding.executePendingBindings();
    }

    @Override
    protected void attachBaseContext(Context newBase) {
        super.attachBaseContext(newBase);
    }
}
